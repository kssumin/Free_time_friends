{"version":3,"sources":["../src/index.js"],"names":["qsStringify","str","oldEscape","escape","q","stringified","stringify","defaultUserHandler","req","_user","session","sessionToken","user","keyConverter","_envKey","returnKey","Array","isArray","indexOf","JSON","parse","fbOAuth2","appId","process","env","FB_APPIDS","secret","FB_SECRETS","googleOAuth2","GOOGLE_APPIDS","GOOGLE_SECRETS","instaOAuth2","INSTA_APPIDS","INSTA_SECRETS","naverOAuth2","NAVER_APPIDS","NAVER_SECRETS","daumOAuth2","DAUM_APPIDS","DAUM_SECRETS","kakaoOAuth2","KAKAO_RESTKEY","KAKAO_SECRETS","makeRedirectUri","redirectUri","_redirectUri","secure","join","query","host","get","_urlQuery","callback","push","encodeURIComponent","length","SocialOAuth2","options","api","router","res","facebookAuth","facebookCallback","post","facebookLogin","googleAuth","googleCallback","googleLogin","instagramAuth","instagramCallback","instagramLogin","instagramLink","instagramRecent","naverAuth","naverCallback","naverLogin","daumAuth","daumCallback","daumLogin","kakaoAuth","kakaoCallback","kakaoLogin","_path","path","_userHandler","userHandler","fbRedirectUri","googleRedirectUri","instaRedirectUri","naverRedirectUri","daumRedirectUri","kakaoRedirectUri","params","redirect_uri","scope","console","log","redirect","getAuthorizeUrl","error_reason","send","code","getOAuthAccessToken","grant_type","err","accessToken","refreshToken","error","access_token","expiration_date","expires","joint","json","body","status","end","errorFn","_req","data","profile","profileImageUrl","id","authData","facebook","parseRest","where","username","email","useMasterKey","then","users","isBanned","_param","socialType","put","objectId","__type","className","sessions","_session","password","toString","name","socialProfile","profileImage","url","result","response_type","expires_in","picture","google","instagram","full_name","profile_picture","userId","_where","newAuthData","recent","response","authDataEtc","naver","profile_image","daum","userid","nickname","imagePath","kakao","kaccount_email","properties"],"mappings":"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","file":"index.js","sourcesContent":["// error code\n// 101: ObjectNotFound\n// 102: InvalidQuery\n\nimport { Router } from 'express';\nimport qs from 'querystring';\nimport { OAuth2 } from 'oauth';\nimport path from 'path';\nimport ParseRest from 'parse-rest-nodejs';\n\nfunction qsStringify(str) {\n  const oldEscape = qs.escape;\n  qs.escape = function (q) { return q; };\n  const stringified = qs.stringify(str);\n  qs.escape = oldEscape;\n  return stringified;\n}\n\n// keep user info to session = default\nfunction defaultUserHandler(req, _user) {\n  // error\n  if (!_user) return {};\n\n  // login results\n  if (typeof req.session === 'object') {\n    if (_user.sessionToken) req.session.sessionToken = _user.sessionToken;\n\n    req.session.user = _user;\n    req.session.user.sessionToken = req.session.sessionToken;\n\n    return req.session.user;\n  }\n  return _user;\n}\n\nfunction keyConverter(_envKey) {\n  let returnKey = _envKey;\n\n  if (typeof _envKey === 'object' && Array.isArray(_envKey)) {\n    returnKey = _envKey[0];\n  } else if (typeof _envKey === 'string' && _envKey.indexOf('[') > -1) {\n    returnKey = (JSON.parse(_envKey))[0];\n  }\n\n  return returnKey;\n}\n\nfunction fbOAuth2() {\n  const appId = keyConverter(process.env.FB_APPIDS);\n  const secret = keyConverter(process.env.FB_SECRETS);\n  return new OAuth2(appId,\n    secret,\n    '',\n    'https://www.facebook.com/dialog/oauth',\n    'https://graph.facebook.com/oauth/access_token',\n    null\n  );\n}\n\nfunction googleOAuth2() {\n  const appId = keyConverter(process.env.GOOGLE_APPIDS);\n  const secret = keyConverter(process.env.GOOGLE_SECRETS);\n  return new OAuth2(appId,\n    secret,\n    '',\n    'https://accounts.google.com/o/oauth2/v2/auth',\n    'https://www.googleapis.com/oauth2/v4/token',\n    null\n  );\n}\n\nfunction instaOAuth2() {\n  const appId = keyConverter(process.env.INSTA_APPIDS);\n  const secret = keyConverter(process.env.INSTA_SECRETS);\n  return new OAuth2(appId,\n    secret,\n    '',\n    'https://api.instagram.com/oauth/authorize/',\n    'https://api.instagram.com/oauth/access_token',\n    null\n  );\n}\n\nfunction naverOAuth2() {\n  const appId = keyConverter(process.env.NAVER_APPIDS);\n  const secret = keyConverter(process.env.NAVER_SECRETS);\n  return new OAuth2(appId,\n    secret,\n    '',\n    'https://nid.naver.com/oauth2.0/authorize',\n    'https://nid.naver.com/oauth2.0/token',\n    null\n  );\n}\n\nfunction daumOAuth2() {\n  const appId = keyConverter(process.env.DAUM_APPIDS);\n  const secret = keyConverter(process.env.DAUM_SECRETS);\n  return new OAuth2(appId,\n    secret,\n    '',\n    'https://apis.daum.net/oauth2/authorize',\n    'https://apis.daum.net/oauth2/token',\n    null\n  );\n}\n\nfunction kakaoOAuth2() {\n  const appId = keyConverter(process.env.KAKAO_RESTKEY);\n  const secret = keyConverter(process.env.KAKAO_SECRETS);\n  return new OAuth2(appId,\n    secret,\n    '',\n    'https://kauth.kakao.com/oauth/authorize',\n    'https://kauth.kakao.com/oauth/token',\n    null\n  );\n}\n\nfunction makeRedirectUri(req, redirectUri) {\n  let _redirectUri = (req.secure ? 'https' : 'http') + '://' + path.join(req.query.host || req.get('host'), redirectUri);\n  const _urlQuery = [];\n  if (req.query && req.query.callback) _urlQuery.push('callback=' + encodeURIComponent(req.query.callback));\n  if (req.query && req.query.host) _urlQuery.push('host=' + encodeURIComponent(req.query.host));\n  if (_urlQuery.length) _redirectUri += '?' + _urlQuery.join('&');\n\n  return _redirectUri;\n}\n\nexport default class SocialOAuth2 {\n  /**\n   * @param {Object?} api - Express router\n   * @return {Object} express router\n   */\n  static create(options, api = Router()) {\n    const router = new SocialOAuth2(options);\n\n    // facebook\n    api.get('/facebook/auth', (req, res) => router.facebookAuth(req, res));\n    api.get('/facebook/callback', (req, res) => router.facebookCallback(req, res));\n    api.post('/facebook/login', (req, res) => router.facebookLogin(req, res));\n\n    // google\n    api.get('/google/auth', (req, res) => router.googleAuth(req, res));\n    api.get('/google/callback', (req, res) => router.googleCallback(req, res));\n    api.post('/google/login', (req, res) => router.googleLogin(req, res));\n\n    // instagram\n    api.get('/instagram/auth', (req, res) => router.instagramAuth(req, res));\n    api.get('/instagram/callback', (req, res) => router.instagramCallback(req, res));\n    api.post('/instagram/login', (req, res) => router.instagramLogin(req, res));\n    api.post('/instagram/link', (req, res) => router.instagramLink(req, res));\n    api.get('/instagram/recent', (req, res) => router.instagramRecent(req, res));\n\n    // naver\n    api.get('/naver/auth', (req, res) => router.naverAuth(req, res));\n    api.get('/naver/callback', (req, res) => router.naverCallback(req, res));\n    api.post('/naver/login', (req, res) => router.naverLogin(req, res));\n\n    // daum\n    api.get('/daum/auth', (req, res) => router.daumAuth(req, res));\n    api.get('/daum/callback', (req, res) => router.daumCallback(req, res));\n    api.post('/daum/login', (req, res) => router.daumLogin(req, res));\n\n    // kakao\n    api.get('/kakao/auth', (req, res) => router.kakaoAuth(req, res));\n    api.get('/kakao/callback', (req, res) => router.kakaoCallback(req, res));\n    api.post('/kakao/login', (req, res) => router.kakaoLogin(req, res));\n\n    return api;\n  }\n\n  constructor(options) {\n    const _path = options.path;\n    const _userHandler = options.userHandler;\n\n    // facebook\n    this.fbOAuth2 = fbOAuth2();\n    this.fbRedirectUri = path.join(_path, '/facebook/callback');\n\n    // google\n    this.googleOAuth2 = googleOAuth2();\n    this.googleRedirectUri = path.join(_path, '/google/callback');\n\n    // instagram\n    this.instaOAuth2 = instaOAuth2();\n    this.instaRedirectUri = path.join(_path, '/instagram/callback');\n\n    // naver\n    this.naverOAuth2 = naverOAuth2();\n    this.naverRedirectUri = path.join(_path, '/naver/callback');\n\n    // daum\n    this.daumOAuth2 = daumOAuth2();\n    this.daumRedirectUri = path.join(_path, '/daum/callback');\n\n    // kakao\n    this.kakaoOAuth2 = kakaoOAuth2();\n    this.kakaoRedirectUri = path.join(_path, '/kakao/callback');\n\n    // userHandler\n    this.userHandler = _userHandler;\n  }\n\n  //\n  // facebook\n  //\n  facebookAuth(req, res) {\n    // For eg. \"http://localhost:3000/facebook/callback\"\n    const params = { redirect_uri: makeRedirectUri(req, this.fbRedirectUri), scope: 'email,public_profile' };\n    console.log('params', params);\n    return res.redirect(this.fbOAuth2.getAuthorizeUrl(params));\n  }\n\n  facebookCallback(req, res) {\n    if (req.error_reason) {\n      res.send(req.error_reason);\n    }\n    if (req.query && req.query.code) {\n      // For eg. \"/facebook/callback\"\n      this.fbOAuth2.getOAuthAccessToken(req.query.code, {\n        grant_type: 'authorization_code',\n        redirect_uri: makeRedirectUri(req, this.fbRedirectUri)\n      }, (err, accessToken, refreshToken, params) => {\n        if (err) {\n          console.error(err);\n          return res.send(err);\n        }\n\n        const facebookAuth = {\n          access_token: accessToken,\n          expiration_date: params.expires\n        };\n        // when custom callback\n        if (req.query && req.query.callback) {\n          let joint = req.query.callback.indexOf('?') > -1 ? '&' : '?';\n          return res.redirect(req.query.callback + joint + qsStringify(facebookAuth));\n        }\n        return res.json(facebookAuth);\n      });\n    }\n  }\n\n  /**\n   * @param {String} accessToken\n   * @return {Object} parse user\n   */\n  facebookLogin(req, res) {\n    const { body = {}, session = {} } = req;\n    console.log('body', body);\n    console.log('session', session);\n    const accessToken = body.access_token || session.access_token;\n    const expires = body.expiration_date || session.expiration_date;\n    if (!accessToken) return res.status(500).json({ code: 101, error: 'Invalid facebook access_token' }).end();\n\n    function errorFn(err) {\n      console.error(err);\n      return res.status(500).json(err).end();\n    }\n\n    const userHandler = (_req, _user) => {\n      let user = defaultUserHandler(_req, _user);\n      if (this.userHandler) user = this.userHandler(_req, user);\n      return user;\n    };\n\n    // https://developers.facebook.com/docs/graph-api/reference/v2.2/user\n    this.fbOAuth2.get('https://graph.facebook.com/me?fields=id,name,email', accessToken, (err, data/* , response */) => {\n      if (err) {\n        return errorFn(err);\n      }\n\n      const profile = JSON.parse(data);\n      console.log(profile);\n      const profileImageUrl = 'https://graph.facebook.com/' + profile.id + '/picture';\n\n      const authData = {\n        facebook: {\n          id: profile.id,\n          access_token: accessToken,\n          expiration_date: expires\n        }\n      };\n\n      const parseRest = new ParseRest(req);\n      parseRest.get('/users', { where: { username: profile.email } }, { useMasterKey: true }).then((users) => {\n        if (users && users[0]) {\n          // Retrieving\n          const user = users[0];\n          // ban user\n          if (user.isBanned) return errorFn({ code: 101, error: 'User is banned' });\n          // save param\n          const _param = { socialType: 'facebook', authData };\n          parseRest.put('/users/' + user.objectId, _param, { useMasterKey: true }).then(() => {\n            // session query\n            parseRest.get('/sessions', { where: { user: { __type: 'Pointer', className: '_User', objectId: user.objectId } } }, { useMasterKey: true }).then((sessions) => {\n              if (sessions && sessions[0]) {\n                const _session = sessions[0];\n                if (typeof req.session === 'object') req.session.sessionToken = _session.sessionToken;\n                // end\n                return res.json(userHandler(req, { ...user, ..._param }));\n              }\n              return errorFn({ code: 101, error: 'sessions not exist' });\n            }, errorFn);\n          }, errorFn);\n        } else {\n          // New\n          const user = {\n            username: profile.email,\n            password: (typeof profile.id === 'number' ? profile.id.toString() : profile.id),\n            name: profile.name,\n            email: profile.email,\n            socialType: 'facebook',\n            socialProfile: profile,\n            profileImage: { url: profileImageUrl },\n            authData\n          };\n          parseRest.post('/users', user, { useMasterKey: true }).then((result) => {\n            if (typeof req.session === 'object') req.session.sessionToken = result.sessionToken;\n            // reload\n            parseRest.get('/users/me').then((_user) => {\n              // end\n              return res.json(userHandler(req, _user));\n            }, errorFn);\n          }, errorFn);\n        }\n      }, errorFn);\n    });\n  }\n\n  //\n  // google\n  //\n  googleAuth(req, res) {\n    // For eg. \"http://localhost:3000/google/callback\"\n    const params = { redirect_uri: makeRedirectUri(req, this.googleRedirectUri), scope: 'email profile', response_type: 'code' };\n    console.log('params', params);\n    return res.redirect(this.googleOAuth2.getAuthorizeUrl(params));\n  }\n\n  googleCallback(req, res) {\n    if (req.error_reason) {\n      res.send(req.error_reason);\n    }\n    if (req.query && req.query.code) {\n      // For eg. \"/google/callback\"\n      this.googleOAuth2.getOAuthAccessToken(req.query.code, {\n        grant_type: 'authorization_code',\n        redirect_uri: makeRedirectUri(req, this.googleRedirectUri)\n      }, (err, accessToken, refreshToken, params) => {\n        if (err) {\n          console.error(err);\n          return res.send(err);\n        }\n\n        const googleAuth = {\n          access_token: accessToken,\n          expiration_date: params.expires_in\n        };\n        // when custom callback\n        if (req.query && req.query.callback) {\n          let joint = req.query.callback.indexOf('?') > -1 ? '&' : '?';\n          return res.redirect(req.query.callback + joint + qsStringify(googleAuth));\n        }\n        return res.json(googleAuth);\n      });\n    }\n  }\n\n  /**\n   * @param {String} accessToken\n   * @return {Object} parse user\n   */\n  googleLogin(req, res) {\n    const { body = {}, session = {} } = req;\n    console.log('body', body);\n    console.log('session', session);\n    const accessToken = body.access_token || session.access_token;\n    const expires = body.expiration_date || session.expiration_date;\n    if (!accessToken) return res.status(500).json({ code: 101, error: 'Invalid google access_token' }).end();\n\n    function errorFn(err) {\n      console.error(err);\n      return res.status(500).json(err).end();\n    }\n\n    const userHandler = (_req, _user) => {\n      let user = defaultUserHandler(_req, _user);\n      if (this.userHandler) user = this.userHandler(_req, user);\n      return user;\n    };\n\n    // https://developers.google.com/oauthplayground\n    this.googleOAuth2.get('https://www.googleapis.com/oauth2/v2/userinfo', accessToken, (err, data/* , response */) => {\n      if (err) {\n        return errorFn(err);\n      }\n\n      const profile = JSON.parse(data);\n      console.log(profile);\n      const profileImageUrl = profile.picture;\n\n      const authData = {\n        google: {\n          id: profile.id,\n          access_token: accessToken,\n          expiration_date: expires\n        }\n      };\n\n      const parseRest = new ParseRest(req);\n      parseRest.get('/users', { where: { username: profile.email } }, { useMasterKey: true }).then((users) => {\n        if (users && users[0]) {\n          // Retrieving\n          const user = users[0];\n          // ban user\n          if (user.isBanned) return errorFn({ code: 101, error: 'User is banned' });\n          // save param\n          const _param = { socialType: 'google', authData };\n          parseRest.put('/users/' + user.objectId, _param, { useMasterKey: true }).then(() => {\n            // session query\n            parseRest.get('/sessions', { where: { user: { __type: 'Pointer', className: '_User', objectId: user.objectId } } }, { useMasterKey: true }).then((sessions) => {\n              if (sessions && sessions[0]) {\n                const _session = sessions[0];\n                if (typeof req.session === 'object') req.session.sessionToken = _session.sessionToken;\n                // end\n                return res.json(userHandler(req, { ...user, ..._param }));\n              }\n              return errorFn({ code: 101, error: 'sessions not exist' });\n            }, errorFn);\n          }, errorFn);\n        } else {\n          // New\n          const user = {\n            username: profile.email,\n            password: (typeof profile.id === 'number' ? profile.id.toString() : profile.id),\n            name: profile.name,\n            email: profile.email,\n            socialType: 'google',\n            socialProfile: profile,\n            profileImage: { url: profileImageUrl },\n            authData\n          };\n          parseRest.post('/users', user, { useMasterKey: true }).then((result) => {\n            if (typeof req.session === 'object') req.session.sessionToken = result.sessionToken;\n            // reload\n            parseRest.get('/users/me').then((_user) => {\n              // end\n              return res.json(userHandler(req, _user));\n            }, errorFn);\n          }, errorFn);\n        }\n      }, errorFn);\n    });\n  }\n\n  //\n  // instagram\n  //\n  instagramAuth(req, res) {\n    // For eg. \"http://localhost:3000/instagram/callback\"\n    const params = { redirect_uri: makeRedirectUri(req, this.instaRedirectUri), scope: 'basic public_content', response_type: 'code' };\n    console.log('params', params);\n    return res.redirect(this.instaOAuth2.getAuthorizeUrl(params));\n  }\n\n  instagramCallback(req, res) {\n    if (req.error_reason) {\n      res.send(req.error_reason);\n    }\n    if (req.query && req.query.code) {\n      // For eg. \"/instagram/callback\"\n      this.instaOAuth2.getOAuthAccessToken(req.query.code, {\n        grant_type: 'authorization_code',\n        redirect_uri: makeRedirectUri(req, this.instaRedirectUri)\n      }, (err, accessToken, refreshToken, params) => {\n        if (err) {\n          console.error(err);\n          return res.send(err);\n        }\n\n        const instagramAuth = {\n          access_token: accessToken,\n          user: params.user\n        };\n        // when custom callback\n        if (req.query && req.query.callback) {\n          let joint = req.query.callback.indexOf('?') > -1 ? '&' : '?';\n          return res.redirect(req.query.callback + joint + qsStringify(instagramAuth));\n        }\n        return res.json(instagramAuth);\n      });\n    }\n  }\n\n  /**\n   * @param {String} accessToken\n   * @return {Object} parse user\n   */\n  instagramLogin(req, res) {\n    const { body = {}, session = {} } = req;\n    console.log('body', body);\n    console.log('session', session);\n    const accessToken = body.access_token || session.access_token;\n    if (!accessToken) return res.status(500).json({ code: 101, error: 'Invalid instagram access_token' }).end();\n\n    function errorFn(err) {\n      console.error(err);\n      return res.status(500).json(err).end();\n    }\n\n    const userHandler = (_req, _user) => {\n      let user = defaultUserHandler(_req, _user);\n      if (this.userHandler) user = this.userHandler(_req, user);\n      return user;\n    };\n\n    // https://www.instagram.com/developer/endpoints/users/\n    this.instaOAuth2.get('https://api.instagram.com/v1/users/self/', accessToken, (err, data/* , response */) => {\n      if (err) {\n        return errorFn(err);\n      }\n\n      const profile = JSON.parse(data).data;\n      console.log(profile);\n\n      const authData = {\n        instagram: {\n          id: profile.id,\n          access_token: accessToken\n        }\n      };\n\n      const parseRest = new ParseRest(req);\n      parseRest.get('/users', { where: { username: profile.username } }, { useMasterKey: true }).then((users) => {\n        if (users && users[0]) {\n          // Retrieving\n          const user = users[0];\n          // ban user\n          if (user.isBanned) return errorFn({ code: 101, error: 'User is banned' });\n          // save param\n          const _param = { socialType: 'instagram', authData };\n          parseRest.put('/users/' + user.objectId, _param, { useMasterKey: true }).then(() => {\n            // session query\n            parseRest.get('/sessions', { where: { user: { __type: 'Pointer', className: '_User', objectId: user.objectId } } }, { useMasterKey: true }).then((sessions) => {\n              if (sessions && sessions[0]) {\n                const _session = sessions[0];\n                if (typeof req.session === 'object') req.session.sessionToken = _session.sessionToken;\n                // end\n                return res.json(userHandler(req, { ...user, ..._param }));\n              }\n              return errorFn({ code: 101, error: 'sessions not exist' });\n            }, errorFn);\n          }, errorFn);\n        } else {\n          // New\n          const user = {\n            username: profile.username,\n            password: (typeof profile.id === 'number' ? profile.id.toString() : profile.id),\n            name: profile.full_name,\n            // email: profile.email,\n            socialType: 'instagram',\n            socialProfile: profile,\n            profileImage: { url: profile.profile_picture },\n            authData\n          };\n          parseRest.post('/users', user, { useMasterKey: true }).then((result) => {\n            if (typeof req.session === 'object') req.session.sessionToken = result.sessionToken;\n            // reload\n            parseRest.get('/users/me').then((_user) => {\n              // end\n              return res.json(userHandler(req, _user));\n            }, errorFn);\n          }, errorFn);\n        }\n      }, errorFn);\n    });\n  }\n\n  /**\n   * @param {String} accessToken\n   * @return {Object} parse user\n   */\n  instagramLink(req, res) {\n    const { body = {}, session = {} } = req;\n    console.log('body', body);\n    console.log('session', session);\n    const accessToken = body.access_token || session.access_token;\n    const userId = body.userId || (session.user && session.user.objectId);\n    const username = body.username || (session.user && session.user.username);\n    if (!accessToken) return res.status(500).json({ code: 101, error: 'Invalid instagram access_token' }).end();\n    if (!userId && !username) return res.status(500).json({ code: 102, error: 'Invalid parameter : userId or username' }).end();\n\n    function errorFn(err) {\n      console.error(err);\n      return res.status(500).json(err).end();\n    }\n\n    const userHandler = (_req, _user) => {\n      let user = defaultUserHandler(_req, _user);\n      if (this.userHandler) user = this.userHandler(_req, user);\n      return user;\n    };\n\n    this.instaOAuth2.get('https://api.instagram.com/v1/users/self/', accessToken, (err, data/* , response */) => {\n      if (err) {\n        console.error(err);\n        res.send(err);\n      } else {\n        const profile = JSON.parse(data).data;\n        console.log(profile);\n\n        const authData = {\n          instagram: {\n            id: profile.id,\n            access_token: accessToken\n          }\n        };\n\n        const parseRest = new ParseRest(req);\n        const _where = userId ? { objectId: userId } : { username };\n        parseRest.get('/users', { where: _where }, { useMasterKey: true }).then((users) => {\n          if (users && users[0]) {\n            // Retrieving\n            const user = users[0];\n            // authData save\n            const newAuthData = { ...user.authData, ...authData };\n            return parseRest.put('/users/' + user.objectId, { authData: newAuthData }, { useMasterKey: true }).then(() => {\n              // keep\n              user.authData = newAuthData;\n              // session query\n              parseRest.get('/sessions', { where: { user: { __type: 'Pointer', className: '_User', objectId: user.objectId } } }, { useMasterKey: true }).then((sessions) => {\n                if (sessions && sessions[0]) {\n                  const _session = sessions[0];\n                  if (typeof req.session === 'object') req.session.sessionToken = _session.sessionToken;\n                  // end\n                  return res.json(userHandler(req, user));\n                }\n                return errorFn({ code: 101, error: 'sessions not exist' });\n              }, errorFn);\n            }, errorFn);\n          }\n          return errorFn({ code: 101, error: 'user not exist' });\n        }, errorFn);\n      }\n    });\n  }\n\n  /**\n   * @param {String} userId\n   * @return {Array} instagram recent media\n   */\n  instagramRecent(req, res) {\n    const { query = {}, session = {} } = req;\n    console.log('query', query);\n    console.log('session', session);\n    const userId = query.userId || (session.user && session.user.objectId);\n    if (!userId) return res.status(500).json({ code: 102, error: 'Invalid parameter : userId' }).end();\n\n    function errorFn(err) {\n      console.error(err);\n      return res.status(500).json(err).end();\n    }\n\n    const parseRest = new ParseRest(req);\n    parseRest.get('/users', { where: { objectId: userId } }, { useMasterKey: true }).then((users) => {\n      if (users && users[0]) {\n        // Retrieving\n        const user = users[0];\n        // get instagram authData\n        const accessToken = user.authData && user.authData.instagram && user.authData.instagram.access_token;\n        if (!accessToken) return errorFn({ code: 101, error: 'Invalid instagram access_token' });\n\n        // get recent\n        return this.instaOAuth2.get('https://api.instagram.com/v1/users/self/media/recent/', accessToken, (err, data/* , response */) => {\n          if (err) {\n            return errorFn(err);\n          }\n\n          const recent = JSON.parse(data).data;\n          // end\n          return res.json(recent);\n        });\n      }\n      return errorFn('user not exist');\n    });\n  }\n\n  //\n  // naver\n  //\n  naverAuth(req, res) {\n    // For eg. \"http://localhost:3000/naver/callback\"\n    const params = { redirect_uri: makeRedirectUri(req, this.naverRedirectUri), response_type: 'code'  };\n    console.log('params', params);\n    return res.redirect(this.naverOAuth2.getAuthorizeUrl(params));\n  }\n\n  naverCallback(req, res) {\n    if (req.error_reason) {\n      res.send(req.error_reason);\n    }\n    if (req.query && req.query.code) {\n      // For eg. \"/naver/callback\"\n      this.naverOAuth2.getOAuthAccessToken(req.query.code, {\n        grant_type: 'authorization_code',\n        redirect_uri: makeRedirectUri(req, this.naverRedirectUri)\n      }, (err, accessToken, refreshToken, params) => {\n        if (err) {\n          console.error(err);\n          return res.send(err);\n        }\n\n        const naverAuth = {\n          access_token: accessToken,\n          expiration_date: params.expires_in\n        };\n        // when custom callback\n        if (req.query && req.query.callback) {\n          let joint = req.query.callback.indexOf('?') > -1 ? '&' : '?';\n          return res.redirect(req.query.callback + joint + qsStringify(naverAuth));\n        }\n        return res.json(naverAuth);\n      });\n    }\n  }\n\n  /**\n   * @param {String} accessToken\n   * @return {Object} parse user\n   */\n  naverLogin(req, res) {\n    const { body = {}, session = {} } = req;\n    console.log('body', body);\n    console.log('session', session);\n    const accessToken = body.access_token || session.access_token;\n    const expires = body.expiration_date || session.expiration_date;\n    if (!accessToken) return res.status(500).json({ code: 101, error: 'Invalid naver access_token' }).end();\n\n    function errorFn(err) {\n      console.error(err);\n      return res.status(500).json(err).end();\n    }\n\n    const userHandler = (_req, _user) => {\n      let user = defaultUserHandler(_req, _user);\n      if (this.userHandler) user = this.userHandler(_req, user);\n      return user;\n    };\n\n    // https://developers.naver.com/docs/login/profile/\n    this.naverOAuth2.get('https://openapi.naver.com/v1/nid/me', accessToken, (err, data/* , response */) => {\n      if (err) {\n        return errorFn(err);\n      }\n\n      const profile = (JSON.parse(data)).response;\n      console.log(profile);\n\n      const authDataEtc = {\n        naver: {\n          id: profile.id,\n          access_token: accessToken,\n          expiration_date: expires\n        }\n      };\n\n      const parseRest = new ParseRest(req);\n      parseRest.get('/users', { where: { username: profile.email } }, { useMasterKey: true }).then((users) => {\n        if (users && users[0]) {\n          // Retrieving\n          const user = users[0];\n          // ban user\n          if (user.isBanned) return errorFn({ code: 101, error: 'User is banned' });\n          // save param\n          const _param = { socialType: 'naver', authDataEtc };\n          parseRest.put('/users/' + user.objectId, _param, { useMasterKey: true }).then(() => {\n            // session query\n            parseRest.get('/sessions', { where: { user: { __type: 'Pointer', className: '_User', objectId: user.objectId } } }, { useMasterKey: true }).then((sessions) => {\n              if (sessions && sessions[0]) {\n                const _session = sessions[0];\n                if (typeof req.session === 'object') req.session.sessionToken = _session.sessionToken;\n                // end\n                return res.json(userHandler(req, { ...user, ..._param }));\n              }\n              return errorFn({ code: 101, error: 'sessions not exist' });\n            }, errorFn);\n          }, errorFn);\n        } else {\n          // New\n          const user = {\n            username: profile.email,\n            password: (typeof profile.id === 'number' ? profile.id.toString() : profile.id),\n            name: profile.name,\n            email: profile.email,\n            socialType: 'naver',\n            socialProfile: profile,\n            profileImage: { url: profile.profile_image },\n            authDataEtc\n          };\n          parseRest.post('/users', user, { useMasterKey: true }).then((result) => {\n            if (typeof req.session === 'object') req.session.sessionToken = result.sessionToken;\n            // reload\n            parseRest.get('/users/me').then((_user) => {\n              // end\n              return res.json(userHandler(req, _user));\n            }, errorFn);\n          }, errorFn);\n        }\n      }, errorFn);\n    });\n  }\n\n  //\n  // daum\n  //\n  daumAuth(req, res) {\n    // For eg. \"http://localhost:3000/daum/callback\"\n    const params = { redirect_uri: makeRedirectUri(req, this.daumRedirectUri), response_type: 'code'  };\n    console.log('params', params);\n    return res.redirect(this.daumOAuth2.getAuthorizeUrl(params));\n  }\n\n  daumCallback(req, res) {\n    if (req.error_reason) {\n      res.send(req.error_reason);\n    }\n    if (req.query && req.query.code) {\n      // For eg. \"/daum/callback\"\n      this.daumOAuth2.getOAuthAccessToken(req.query.code, {\n        grant_type: 'authorization_code',\n        redirect_uri: makeRedirectUri(req, this.daumRedirectUri)\n      }, (err, accessToken, refreshToken, params) => {\n        if (err) {\n          console.error(err);\n          return res.send(err);\n        }\n\n        const daumAuth = {\n          access_token: accessToken,\n          expiration_date: params.expires_in\n        };\n        // when custom callback\n        if (req.query && req.query.callback) {\n          let joint = req.query.callback.indexOf('?') > -1 ? '&' : '?';\n          return res.redirect(req.query.callback + joint + qsStringify(daumAuth));\n        }\n        return res.json(daumAuth);\n      });\n    }\n  }\n\n  /**\n   * @param {String} accessToken\n   * @return {Object} parse user\n   */\n  daumLogin(req, res) {\n    const { body = {}, session = {} } = req;\n    console.log('body', body);\n    console.log('session', session);\n    const accessToken = body.access_token || session.access_token;\n    const expires = body.expiration_date || session.expiration_date;\n    if (!accessToken) return res.status(500).json({ code: 101, error: 'Invalid daum access_token' }).end();\n\n    function errorFn(err) {\n      console.error(err);\n      return res.status(500).json(err).end();\n    }\n\n    const userHandler = (_req, _user) => {\n      let user = defaultUserHandler(_req, _user);\n      if (this.userHandler) user = this.userHandler(_req, user);\n      return user;\n    };\n\n    // https://developers.daum.net/services/apis/user/v1/show.format\n    this.daumOAuth2.get('https://apis.daum.net/user/v1/show.json', accessToken, (err, data/* , response */) => {\n      if (err) {\n        return errorFn(err);\n      }\n\n      const profile = (JSON.parse(data)).result;\n      console.log(profile);\n\n      const authDataEtc = {\n        daum: {\n          id: profile.id,\n          access_token: accessToken,\n          expiration_date: expires\n        }\n      };\n\n      const parseRest = new ParseRest(req);\n      parseRest.get('/users', { where: { username: profile.userid } }, { useMasterKey: true }).then((users) => {\n        if (users && users[0]) {\n          // Retrieving\n          const user = users[0];\n          // ban user\n          if (user.isBanned) return errorFn({ code: 101, error: 'User is banned' });\n          // save param\n          const _param = { socialType: 'daum', authDataEtc };\n          parseRest.put('/users/' + user.objectId, _param, { useMasterKey: true }).then(() => {\n            // session query\n            parseRest.get('/sessions', { where: { user: { __type: 'Pointer', className: '_User', objectId: user.objectId } } }, { useMasterKey: true }).then((sessions) => {\n              if (sessions && sessions[0]) {\n                const _session = sessions[0];\n                if (typeof req.session === 'object') req.session.sessionToken = _session.sessionToken;\n                // end\n                return res.json(userHandler(req, { ...user, ..._param }));\n              }\n              return errorFn({ code: 101, error: 'sessions not exist' });\n            }, errorFn);\n          }, errorFn);\n        } else {\n          // New\n          const user = {\n            username: profile.userid,\n            password: (typeof profile.id === 'number' ? profile.id.toString() : profile.id),\n            name: profile.nickname,\n            // email: profile.email,\n            socialType: 'daum',\n            socialProfile: profile,\n            profileImage: { url: profile.imagePath },\n            authDataEtc\n          };\n          parseRest.post('/users', user, { useMasterKey: true }).then((result) => {\n            if (typeof req.session === 'object') req.session.sessionToken = result.sessionToken;\n            // reload\n            parseRest.get('/users/me').then((_user) => {\n              // end\n              return res.json(userHandler(req, _user));\n            }, errorFn);\n          }, errorFn);\n        }\n      }, errorFn);\n    });\n  }\n\n  //\n  // kakao\n  //\n  kakaoAuth(req, res) {\n    // For eg. \"http://localhost:3000/kakao/callback\"\n    const params = { redirect_uri: makeRedirectUri(req, this.kakaoRedirectUri), response_type: 'code'  };\n    console.log('params', params);\n    return res.redirect(this.kakaoOAuth2.getAuthorizeUrl(params));\n  }\n\n  kakaoCallback(req, res) {\n    if (req.error_reason) {\n      res.send(req.error_reason);\n    }\n    if (req.query && req.query.code) {\n      // For eg. \"/kakao/callback\"\n      this.kakaoOAuth2.getOAuthAccessToken(req.query.code, {\n        grant_type: 'authorization_code',\n        redirect_uri: makeRedirectUri(req, this.kakaoRedirectUri)\n      }, (err, accessToken, refreshToken, params) => {\n        if (err) {\n          console.error(err);\n          return res.send(err);\n        }\n\n        const kakaoAuth = {\n          access_token: accessToken,\n          expiration_date: params.expires_in\n        };\n        // when custom callback\n        if (req.query && req.query.callback) {\n          let joint = req.query.callback.indexOf('?') > -1 ? '&' : '?';\n          return res.redirect(req.query.callback + joint + qsStringify(kakaoAuth));\n        }\n        return res.json(kakaoAuth);\n      });\n    }\n  }\n\n  /**\n   * @param {String} accessToken\n   * @return {Object} parse user\n   */\n  kakaoLogin(req, res) {\n    const { body = {}, session = {} } = req;\n    console.log('body', body);\n    console.log('session', session);\n    const accessToken = body.access_token || session.access_token;\n    const expires = body.expiration_date || session.expiration_date;\n    if (!accessToken) return res.status(500).json({ code: 101, error: 'Invalid kakao access_token' }).end();\n\n    function errorFn(err) {\n      console.error(err);\n      return res.status(500).json(err).end();\n    }\n\n    const userHandler = (_req, _user) => {\n      let user = defaultUserHandler(_req, _user);\n      if (this.userHandler) user = this.userHandler(_req, user);\n      return user;\n    };\n\n    // https://developers.kakao.com/docs/restapi/user-management#%EB%A1%9C%EA%B7%B8%EC%9D%B8\n    this.kakaoOAuth2.get('https://kapi.kakao.com/v1/user/me', accessToken, (err, data/* , response */) => {\n      if (err) {\n        return errorFn(err);\n      }\n\n      const profile = (JSON.parse(data)).result;\n      console.log(profile);\n\n      const authDataEtc = {\n        kakao: {\n          id: profile.id,\n          access_token: accessToken,\n          expiration_date: expires\n        }\n      };\n\n      const parseRest = new ParseRest(req);\n      parseRest.get('/users', { where: { username: profile.kaccount_email || profile.id } }, { useMasterKey: true }).then((users) => {\n        if (users && users[0]) {\n          // Retrieving\n          const user = users[0];\n          // ban user\n          if (user.isBanned) return errorFn({ code: 101, error: 'User is banned' });\n          // save param\n          const _param = { socialType: 'kakao', authDataEtc };\n          parseRest.put('/users/' + user.objectId, _param, { useMasterKey: true }).then(() => {\n            // session query\n            parseRest.get('/sessions', { where: { user: { __type: 'Pointer', className: '_User', objectId: user.objectId } } }, { useMasterKey: true }).then((sessions) => {\n              if (sessions && sessions[0]) {\n                const _session = sessions[0];\n                if (typeof req.session === 'object') req.session.sessionToken = _session.sessionToken;\n                // end\n                return res.json(userHandler(req, { ...user, ..._param }));\n              }\n              return errorFn({ code: 101, error: 'sessions not exist' });\n            }, errorFn);\n          }, errorFn);\n        } else {\n          // New\n          const user = {\n            username: profile.kaccount_email || profile.id,\n            password: (typeof profile.id === 'number' ? profile.id.toString() : profile.id),\n            name: profile.properties.nickname,\n            // email: profile.email,\n            socialType: 'kakao',\n            socialProfile: profile,\n            profileImage: { url: profile.properties.profile_image },\n            authDataEtc\n          };\n          parseRest.post('/users', user, { useMasterKey: true }).then((result) => {\n            if (typeof req.session === 'object') req.session.sessionToken = result.sessionToken;\n            // reload\n            parseRest.get('/users/me').then((_user) => {\n              // end\n              return res.json(userHandler(req, _user));\n            }, errorFn);\n          }, errorFn);\n        }\n      }, errorFn);\n    });\n  }\n}\n"]}